# Specify the location that the packages downloaded by apt  should
# be  cached.   Setting  this value to "" will cause caching to be
# turned off.
APTCACHE="${PWD}/cache/apt"

# Specify using hard links in apt cache handling.   Changing  this
# to no will disable hard linking and will copy the files.
#
# It  is  advised  to  set  this to no if you are using user-mode-
# linux.
APTCACHEHARDLINK=yes

# Configures where the apt configuration files  are  copied  from.
# By  default,  this value is empty, allowing the usual configura‐
# tion options to take effect.  Setting  this  variable  overrides
# other options.
#APTCONFDIR="/etc/apt"
APTCONFDIR=""

# Specifies the build architecture (as described in dpkg-architec‐
# ture(1)).  It'll be the  architecture  used  when  creating  the
# chroot, defaults to the
# system one.  The supported values are the ones debootstrap sup‐
# ports.
ARCHITECTURE="$(dpkg --print-architecture)"

# Always run with --autocleanaptcache option.
AUTOCLEANAPTCACHE=yes

# When this value is set to yes, pdebuild will invoke debsign com‐
# mand after building.
AUTO_DEBSIGN=yes

# Specifies  the default location for the archived chroot image to
# be created  and  used.   This  is  overridden  with  the  option
# --basetgz.
BASETGZ="${PWD}/cache/pbuilder/base.tgz"

# When  this  value  is set, pbuilder will mount these directories
# using bind-mount.  Different directories are space separated,  a
# column  can  optionally  specify  a mount destination inside the
# chroot.
# Do not bind-mount /.
# An Example:
#      BINDMOUNTS=directories-to-bind-mount[:internal-mountpoint]
#BINDMOUNTS="/home /mnt/test /home/joe/repo:/var/repo"
BINDMOUNTS="${BUILDRESULT}"

# The directory inside the chroot where the build  happens.   This
# directory  will  contain the build products; the source packages
# will be unpacked in  a  subdirectory  therein  contained,  named
# $srcpkg-$ver,  with $ver being the upstream part of the version,
# without epoch and debian revision.
#
# Attention! Some directories — such as /tmp — are not safe to use
# since  they can be world-writable, and external users can temper
# with the build process.
BUILDDIR="${PWD}/build"

# The default place which the  chroot  is  constructed.   pbuilder
# will use the directory $BUILDPLACE$$.  which means, that it will
# use the directory and the PID to determine the directory to use.
# This  should  obtain  an unique directory for concurrent runs of
# pbuilder in one machine.  This is not guaranteed  to  happen  on
# network  shared  drives,  so  be aware of this fact when playing
# with this option on NFS shared beowulf clusters.  Change  it  to
# something  like  /var/cache/pbuilder/build/$HOSTNAME/ when doing
# such a thing.   pbuilder clean cleans up this directory.
BUILDPLACE="${PWD}/cache/pbuilder/chroot"

# Specify the default directory which the  build  result  will  be
# copied over to after the building.
#
# Unlike  the  --buildresult  command-line  option the path is not
# canonicalized, so you should specify a full path, not a relative
# path.
BUILDRESULT="${PWD}/cache/pbuilder/results"

# Enable or disable the builtin eatmydata support.
# For this to work the library of the same architecture as the one
# inside the chroot has to be installed in the host.
EATMYDATA=no

# Specifies where ccache will keep its cached compiler output.  If
# this is specified, ccache will be installed upon pbuilder create
# or pbuilder update, /usr/lib/ccache will  be  prepended  to  the
# PATH,   CCACHEDIR  will  be  bind-mounted  in  the  chroot,  and
# CCACHE_DIR (ccache variable) will be  set  to  CCACHEDIR.   Note
# that  files  in  CCACHEDIR  are  chowned to BUILDUSERID (1234 by
# default).   ccache is disabled by default.
CCACHEDIR=

# Set the UID and GID of the files built as result.  They probably
# need  to be set to numeric UID values, so that it works the same
# inside the chroot and outside the chroot.
#
# If sudo is used, the values specified by sudo is used.  They are
# SUDO_UID, and SUDO_GID.  The default value is 0
BUILDRESULTUID="$(head -n1 user.txt)"
BUILDRESULTGID="$(tail -n1 user.txt)"

# This  option  is  used on invocation of fakeroot for dpkg-build‐
# package in pdebuild
BUILDSOURCEROOTCMD=fakeroot

# The uid to be used inside chroot.  It should ideally not collide
# with  user-id  outside  the  chroot, to avoid user inside chroot
# having access to processes owned by  the  user  id  outside  the
# chroot.
BUILDUSERID=1234

# The  user  name  of  the user the build will run as.  Specifying
# this will enable the use of fakeroot inside pbuilder.
#
# Note that this will require fakeroot to be installed within  the
# chroot,  and  fakeroot  will  automatically  be  installed.  And
# -rfakeroot will be added to DEBBUILDOPTS
BUILDUSERNAME=pbuilder

# Specify the default distribution components to use.  This option
# is space-delimited, use quotes when listing multiple components.
# This option only affects when  doing  pbuilder  create  or  when
# --override-config is specified for pbuilder update option.
COMPONENTS=main

# Program  to use for compression of the base.tgz.  The default is
# to use gzip, and any program that can be used to  compress  data
# using a pipe can be used.
#
# If set to "pigz", compression and decompression is gzip compati‐
# ble but will use all available CPUs.
# If set to "cat", there will be no compression at  all  (so  com‐
# pression/decompression  will be a lot faster but takes much more
# space on the disk).
COMPRESSPROG=gzip

# Defines the proxy for http connection.
#export http_proxy=http://your-proxy:8080/

# Uses this variable as DEBIAN_BUILDARCH.  This trick can be  used
# for other environmental variables as well.
#export DEBIAN_BUILDARCH=athlon

# The  options  given here will be passed on to dpkg-buildpackage.
# This can be useful e.g. for binary-only builds. The command-line
# option --debbuildopts will be appended to any contents specified
# here but may also be used to reset the list of options.
#
# The default value is to build source and binary package.
DEBBUILDOPTS=

# When this option is set to --variant=buildd pbuilder will invoke
# $DEBOOTSTRAP with  --variant=buildd  option,  which  results  in
# debootstrap creating a minimal chroot for buildd instead of try‐
# ing to create a minimal installation chroot.  --keyring is  used
# to specify a keyring for debootstrap.
#DEBOOTSTRAPOPTS=( '--variant=buildd' '--keyring' '/usr/share/keyrings/debian-archive-keyring.gpg' )

# Additional  keyrings  to  use for package verification with apt,
# not used for debootstrap (use $DEBOOTSTRAPOPTS).   Use  this  to
# add  (local) signed repositories. By default the debian-archive-
# keyring package inside the chroot is used.

# Keyrings are copied into /etc/apt/trusted.gpg.d in  the  chroot.
# APT supports it since version 0.7.25.1, firstly available in the
# Debian release codenamed  "squeeze"  (released  on  2011).   For
# older chroots, use a G hook to run apt-key manually.
APTKEYRINGS=()

# Use  this  option  to  switch the implementation of debootstrap.
# Known  implementations  of  debootstrap  are  cdebootstrap   and
# debootstrap
DEBOOTSTRAP=debootstrap

# Sets  interactiveness  of  pbuilder  run.  Setting this value to
# blank will cause the pbuilder run  to  be  interactive.   Change
# this value when noninteractive upgrades do not work.
export DEBIAN_FRONTEND=noninteractive

# Specify  the  default  distribution  to  use.   This option only
# affects when doing pbuilder create or when --override-config  is
# specified for pbuilder update option.
DISTRIBUTION=sid

# Specifies  extra packages which the system should install in the
# chroot on pbuilder create.   This  is  a  space-delimited  list.
# Also this is installed on pbuilder update
#EXTRAPACKAGES="ccache lintian XXX"
EXTRAPACKAGES="apt-utils"

# Specifies  the  default  location  for the user hooks directory.
# This is overridden with the option --hookdir.
#
# If this is specified, hooks are searched for in the chroot, when
# running  pbuilder.  If it is not defined, or is an empty string,
# hooks are not executed.
#
# For details, see pbuilder(8)
HOOKDIR="${PWD}/pbuilder-hooks/"

# Specify how much output you want from pbuilder, valid values are
# E  (errors  only),  W (errors and warnings), I (errors, warnings
# and informational) and D (everything including some  debug  mes‐
# sages).
LOGLEVEL=D

# Specify  whether you'd like to see colored output from pbuilder.
# Valid values are auto (to try to  automatically  detect  whether
# the  terminal supports them), yes (to always use colors), and no
# (to never use colors).
USECOLORS=auto

# Specify the mirror site which contains the main Debian distribu‐
# tion.
#
# Note  that you cannot really use file:/ kind of URL, because the
# location needs to be accessible from within the chroot.
MIRRORSITE="http://ftp.de.debian.org/debian"

# The lines which is added to the sources.list, delimited  with  |
# Like:
# deb http://local/mirror sid main|deb file:/usr/local/mirror ./
#
# The  deb  lines here are the ones that will appear at the top of
# the sources.list inside the chroot.  Be sure to follow the  syn‐
# tax  rules of sources.list(5).  These lines appear at the begin‐
# ning of the constructed sources file, so this is  the  place  to
# list  your local mirror sites; apt will then use them in prefer‐
# ence to the ones listed in MIRRORSITE .
#
# To make changes on  mirror  site  effective  on  update  --over‐
# ride-config needs to be specified.
#OTHERMIRROR=deb http://xxx/xxx/ ./ [| other deb lines... ]
OTHERMIRROR="deb [trusted=yes] file://${BUILDRESULT} ./"

# Specify  what  pbuilder implementation to use for pdebuild.  The
# currently possible values are pbuilder and cowbuilder
PDEBUILD_PBUILDER=pbuilder

# The extension of filename used in pkgname-logfile option.
PKGNAME_LOGFILE_EXTENSION="_$(dpkg --print-architecture).build"

# Always run with --pkgname-logfile option, and create  a  logfile
# named after the package name.
PKGNAME_LOGFILE=yes

# This option is used on invocation of pbuilder build in pdebuild
PBUILDERROOTCMD="sudo -E"

# This  option  is  used  by  various parts of pbuilder to satisfy
# (i.e. install) the build-dependencies of a package.   These  are
# the available implementations:
#
# pbuilder-satisfydepends-apt  the  newest  implementation,  which
# leverage the ability of apt 1.4 to  satisfy  build  dependencies
# and  build  conflicts from a .dsc; useful since it's pretty fast
# and doesn't require the installation of any non-required package
# in the chroot, nor of dummy packages.
#
# pbuilder-satisfydepends-experimental  might  be  useful  to pull
# packages from repositories with a  low  APT  Pin  Priority  (for
# example, Debian's experimental or stable-backports).
#
# pbuilder-satisfydepends-aptitude will resolve build-dependencies
# and build-conflicts with aptitude which helps dealing with  com‐
# plex cases but does not support unsigned APT repositories.
#
# pbuilder-satisfydepends-gdebi  will  resolve  build-dependencies
# using gdebi, faster than classic implementation,  and  does  not
# require installation of a dummy package like the aptitude imple‐
# mentation.
#
# pbuilder-satisfydepnds-classic  the  "classic"   implementation,
# which  was  the  original  implementation  used by default until
# v0.172.
#
# The default is now "aptitude".
PBUILDERSATISFYDEPENDSCMD=/usr/lib/pbuilder/pbuilder-satisfydepends-aptitude

# Array of flags to give to pbuilder-satisfydepends.
PBUILDERSATISFYDEPENDSOPT=()

# Specify whether to generate an additional .changes  file  for  a
# source-only  upload, whilst still producing a full .changes file
# for any binary packages built.
SOURCE_ONLY_CHANGES=no

# Allow untrusted (no key installed)  and  unsigned  repositories.
# Warning: Enabling this option may allow remote attackers to com‐
# promise  the  system.   Better  use  signed   repositories   and
# $APTKEYRINGS to add the key(s).
ALLOWUNTRUSTED=no

# Extra flags to give to apt-get.
APTGETOPT=()

# Extra flags to give to aptitude.
APTITUDEGETOPT=()

# Enable  use  of  debdelta  to download the needed updated in the
# chroot, if debdelta is already installed.
DEBDELTA=no

# Specify the packages to be removed on creation of base.tgz Leav‐
# ing lilo in the chroot is like keeping a timebomb...
REMOVEPACKAGES=lilo

# Sets timeout time.  Build will be stopped with SIGTERM after the
# set time.
TIMEOUT_TIME=2h

# Whether to use DEVFS or not.  Has  no  effect  on  kFreeBSD,  as
# DEVFS is always used.
USEDEVFS=no

# Specify  yes  when it is desired to mount /dev/pts interface. It
# is usually a good idea, since there are many software which fail
# miserably when there is no /dev/pts being mounted.
USEDEVPTS=yes

# Whether to mount a sysfs (linsysfs for KFreeBSD) in /sys or not.
# Has no effect on GNU/Hurd hosts, where sysfs is  not  available.
# It  is  usually  a  good  idea, since there are several software
# which require /sys being populated.
USESYSFS=yes

# Specify yes when you do not want to disable network access  dur‐
# ing  build.  Network is not available on a Debian buildd, so you
# might want to keep the default.  Disabling network  access  cur‐
# rently only works on Linux.
USENETWORK=no

# Specify yes when it is desired to mount /dev/shm mount point. It
# is usually a good idea in  order  to  work  with  software  that
# expects shm to work.
# /run/shm will be configured as a symbolic link to /dev/shm.
# This  option  used to be named USERUNSHM, for compatibility pur‐
# pose the old name is still supported, and if set it'll  override
# any USESHM.
# Has  no  effect  on  GNU/Hurd  hosts due to bugs in /hurd/tmpfs;
# since /dev is always bind-mounted, the host's /dev/shm  will  be
# used.
USESHM=yes

# When  this option is set to yes pdebuild-internal implementation
# of pdebuild is used.
USE_PDEBUILD_INTERNAL=yes

# Specify yes when it is desired to mount /proc interface.  It  is
# usually  a  good  idea, since there are many software which fail
# miserably when there is no /proc being mounted.
USEPROC=yes

# Array of additional files to copy out of the build area.
# In case a wildcard is needed (e.g.  *.changes) quote it to  have
# the  wildcard  escaped  and  not  expanded at configuration load
# time, but instead expanded at run time when the additional build
# artifacts  are  exported.   Spaces  in  file  names  needs to be
# escaped by using a \ or a wildcard to match the space.
#ADDITIONAL_BUILDRESULTS=(foo "bar*" "baz\ biz")
ADDITIONAL_BUILDRESULTS=()

# pbuilder copies some configuration  files  (like  /etc/hosts  or
# /etc/hostname)  from  the  host  system into the chroot.  If the
# directory specified here exists and contains one of  the  copied
# files  (without  the leading /etc) that file will be copied from
# here instead of the system one.
CONFDIR="/etc/pbuilder/conf_files"

# Set the what the HOME environment variable points to during  the
# builds.   It  defaults  to  a  non-existing directory to prevent
# builds from writing to HOME, which is reserved to users.  If you
# need a working HOME you can set it to $BUILDDIR instead.
BUILD_HOME="/nonexistent"

# Set  the value of the maintainer name and email in the changelog
# during binNMU.  Such value is  then  copied  to  the  Changed-By
# field  of  the  .changes  file.  Can be set at run time with the
# --bin-nmu-maintainer command line option.
BINNMU_MAINTAINER=
